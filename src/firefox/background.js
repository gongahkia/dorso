// ----- CONST DEFINITIONS -----

const LLM_REGEX = /chatgpt\.com|perplexity\.ai|gemini\.google\.com|claude\.ai|deepseek\.com|you\.com|jasper\.ai|copilot\.microsoft\.com|writesonic\.com\/chat|socrat\.ai|huggingface\.co\/chat/;
const RESETTIME = 15 * 60 * 1000;
const LEETCODE_GRAPHQL_ENDPOINT = 'https://leetcode.com/graphql';
const QUESTION_QUERY = `
query questionData($titleSlug: String!) {
  question(titleSlug: $titleSlug) {
    questionId
    title
    titleSlug
    content
    difficulty
    exampleTestcases
  }
}
`;

// ----- HELPER FUNCTION -----

async function fetchLeetCodeQuestion(titleSlug) {
    const response = await fetch(LEETCODE_GRAPHQL_ENDPOINT, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json',
        },
        body: JSON.stringify({
            query: QUESTION_QUERY,
            variables: { titleSlug: titleSlug },
        }),
    });
    const data = await response.json();
    if (data.errors) {
        console.error("GraphQL Error:", data.errors);
        throw new Error("Failed to fetch LeetCode question");
    }
    return data.data.question;
}

async function getRandomLeetCodeProblemTitleSlug() {
    try {
        const questions = [
            "count-total-number-of-colored-cells",
            "two-sum",
            "add-two-numbers",
            "longest-substring-without-repeating-characters",
            "median-of-two-sorted-arrays",
            "longest-palindromic-substring",
            "zigzag-conversion",
            "reverse-integer",
            "string-to-integer-(atoi)",
            "palindrome-number",
            "regular-expression-matching",
            "container-with-most-water",
            "integer-to-roman",
            "roman-to-integer",
            "longest-common-prefix",
            "3sum",
            "3sum-closest",
            "letter-combinations-of-a-phone-number",
            "4sum",
            "remove-nth-node-from-end-of-list",
            "valid-parentheses",
            "merge-two-sorted-lists",
            "generate-parentheses",
            "merge-k-sorted-lists",
            "swap-nodes-in-pairs",
            "reverse-nodes-in-k-group",
            "remove-duplicates-from-sorted-array",
            "remove-element",
            "find-the-index-of-the-first-occurrence-in-a-string",
            "divide-two-integers",
            "substring-with-concatenation-of-all-words",
            "next-permutation",
            "longest-valid-parentheses",
            "search-in-rotated-sorted-array",
            "find-first-and-last-position-of-element-in-sorted-array",
            "search-insert-position",
            "valid-sudoku",
            "sudoku-solver",
            "count-and-say",
            "combination-sum",
            "combination-sum-ii",
            "first-missing-positive",
            "trapping-rain-water",
            "multiply-strings",
            "wildcard-matching",
            "jump-game-ii",
            "permutations",
            "permutations-ii",
            "rotate-image",
            "group-anagrams",
            "pow(x,-n)",
            "n-queens",
            "n-queens-ii",
            "maximum-subarray",
            "spiral-matrix",
            "jump-game",
            "merge-intervals",
            "insert-interval",
            "length-of-last-word",
            "spiral-matrix-ii",
            "permutation-sequence",
            "rotate-list",
            "unique-paths",
            "unique-paths-ii",
            "minimum-path-sum",
            "valid-number",
            "plus-one",
            "add-binary",
            "text-justification",
            "sqrt(x)",
            "climbing-stairs",
            "simplify-path",
            "edit-distance",
            "set-matrix-zeroes",
            "search-a-2d-matrix",
            "sort-colors",
            "minimum-window-substring",
            "combinations",
            "subsets",
            "word-search",
            "remove-duplicates-from-sorted-array-ii",
            "search-in-rotated-sorted-array-ii",
            "remove-duplicates-from-sorted-list-ii",
            "remove-duplicates-from-sorted-list",
            "largest-rectangle-in-histogram",
            "maximal-rectangle",
            "partition-list",
            "scramble-string",
            "merge-sorted-array",
            "gray-code",
            "subsets-ii",
            "decode-ways",
            "reverse-linked-list-ii",
            "restore-ip-addresses",
            "binary-tree-inorder-traversal",
            "unique-binary-search-trees-ii",
            "unique-binary-search-trees",
            "interleaving-string",
            "validate-binary-search-tree",
            "recover-binary-search-tree",
            "same-tree",
            "symmetric-tree",
            "binary-tree-level-order-traversal",
            "binary-tree-zigzag-level-order-traversal",
            "maximum-depth-of-binary-tree",
            "construct-binary-tree-from-preorder-and-inorder-traversal",
            "construct-binary-tree-from-inorder-and-postorder-traversal",
            "binary-tree-level-order-traversal-ii",
            "convert-sorted-array-to-binary-search-tree",
            "convert-sorted-list-to-binary-search-tree",
            "balanced-binary-tree",
            "minimum-depth-of-binary-tree",
            "path-sum",
            "path-sum-ii",
            "flatten-binary-tree-to-linked-list",
            "distinct-subsequences",
            "populating-next-right-pointers-in-each-node",
            "populating-next-right-pointers-in-each-node-ii",
            "pascal's-triangle",
            "pascal's-triangle-ii",
            "triangle",
            "best-time-to-buy-and-sell-stock",
            "best-time-to-buy-and-sell-stock-ii",
            "best-time-to-buy-and-sell-stock-iii",
            "binary-tree-maximum-path-sum",
            "valid-palindrome",
            "word-ladder-ii",
            "word-ladder",
            "longest-consecutive-sequence",
            "sum-root-to-leaf-numbers",
            "surrounded-regions",
            "palindrome-partitioning",
            "palindrome-partitioning-ii",
            "clone-graph",
            "gas-station",
            "candy",
            "single-number",
            "single-number-ii",
            "copy-list-with-random-pointer",
            "word-break",
            "word-break-ii",
            "linked-list-cycle",
            "linked-list-cycle-ii",
            "reorder-list",
            "binary-tree-preorder-traversal",
            "binary-tree-postorder-traversal",
            "lru-cache",
            "insertion-sort-list",
            "sort-list",
            "max-points-on-a-line",
            "evaluate-reverse-polish-notation",
            "reverse-words-in-a-string",
            "maximum-product-subarray",
            "find-minimum-in-rotated-sorted-array",
            "find-minimum-in-rotated-sorted-array-ii",
            "min-stack",
            "binary-tree-upside-down",
            "read-n-characters-given-read4",
            "read-n-characters-given-read4-ii---call-multiple-times",
            "longest-substring-with-at-most-two-distinct-characters",
            "intersection-of-two-linked-lists",
            "one-edit-distance",
            "find-peak-element",
            "missing-ranges",
            "maximum-gap",
            "compare-version-numbers",
            "fraction-to-recurring-decimal",
            "two-sum-ii---input-array-is-sorted",
            "excel-sheet-column-title",
            "majority-element",
            "two-sum-iii---data-structure-design",
            "excel-sheet-column-number",
            "factorial-trailing-zeroes",
            "binary-search-tree-iterator",
            "dungeon-game",
            "combine-two-tables",
            "second-highest-salary",
            "nth-highest-salary",
            "rank-scores",
            "largest-number",
            "consecutive-numbers",
            "employees-earning-more-than-their-managers",
            "duplicate-emails",
            "customers-who-never-order",
            "department-highest-salary",
            "department-top-three-salaries",
            "reverse-words-in-a-string-ii",
            "repeated-dna-sequences",
            "best-time-to-buy-and-sell-stock-iv",
            "rotate-array",
            "reverse-bits",
            "number-of-1-bits",
            "word-frequency",
            "valid-phone-numbers",
            "transpose-file",
            "tenth-line",
            "delete-duplicate-emails",
            "rising-temperature",
            "house-robber",
            "binary-tree-right-side-view",
            "number-of-islands",
            "bitwise-and-of-numbers-range",
            "happy-number",
            "remove-linked-list-elements",
            "count-primes",
            "isomorphic-strings",
            "reverse-linked-list",
            "course-schedule",
            "implement-trie-(prefix-tree)",
            "minimum-size-subarray-sum",
            "course-schedule-ii",
            "design-add-and-search-words-data-structure",
            "word-search-ii",
            "house-robber-ii",
            "shortest-palindrome",
            "kth-largest-element-in-an-array",
            "combination-sum-iii",
            "contains-duplicate",
            "the-skyline-problem",
            "contains-duplicate-ii",
            "contains-duplicate-iii",
            "maximal-square",
            "count-complete-tree-nodes",
            "rectangle-area",
            "basic-calculator",
            "implement-stack-using-queues",
            "invert-binary-tree",
            "basic-calculator-ii",
            "summary-ranges",
            "majority-element-ii",
            "kth-smallest-element-in-a-bst",
            "power-of-two",
            "implement-queue-using-stacks",
            "number-of-digit-one",
            "palindrome-linked-list",
            "lowest-common-ancestor-of-a-binary-search-tree",
            "lowest-common-ancestor-of-a-binary-tree",
            "delete-node-in-a-linked-list",
            "product-of-array-except-self",
            "sliding-window-maximum",
            "search-a-2d-matrix-ii",
            "different-ways-to-add-parentheses",
            "valid-anagram",
            "shortest-word-distance",
            "shortest-word-distance-ii",
            "shortest-word-distance-iii",
            "strobogrammatic-number",
            "strobogrammatic-number-ii",
            "strobogrammatic-number-iii",
            "group-shifted-strings",
            "count-univalue-subtrees",
            "flatten-2d-vector",
            "meeting-rooms",
            "meeting-rooms-ii",
            "factor-combinations",
            "verify-preorder-sequence-in-binary-search-tree",
            "paint-house",
            "binary-tree-paths",
            "add-digits",
            "3sum-smaller",
            "single-number-iii",
            "graph-valid-tree",
            "trips-and-users",
            "ugly-number",
            "ugly-number-ii",
            "paint-house-ii",
            "palindrome-permutation",
            "palindrome-permutation-ii",
            "missing-number",
            "alien-dictionary",
            "closest-binary-search-tree-value",
            "encode-and-decode-strings",
            "closest-binary-search-tree-value-ii",
            "integer-to-english-words",
            "h-index",
            "h-index-ii",
            "paint-fence",
            "find-the-celebrity",
            "first-bad-version",
            "perfect-squares",
            "wiggle-sort",
            "zigzag-iterator",
            "expression-add-operators",
            "move-zeroes",
            "peeking-iterator",
            "inorder-successor-in-bst",
            "walls-and-gates",
            "find-the-duplicate-number",
            "unique-word-abbreviation",
            "game-of-life",
            "word-pattern",
            "word-pattern-ii",
            "nim-game",
            "flip-game",
            "flip-game-ii",
            "find-median-from-data-stream",
            "best-meeting-point",
            "serialize-and-deserialize-binary-tree",
            "binary-tree-longest-consecutive-sequence",
            "bulls-and-cows",
            "longest-increasing-subsequence",
            "remove-invalid-parentheses",
            "smallest-rectangle-enclosing-black-pixels",
            "range-sum-query---immutable",
            "range-sum-query-2d---immutable",
            "number-of-islands-ii",
            "additive-number",
            "range-sum-query---mutable",
            "range-sum-query-2d---mutable",
            "best-time-to-buy-and-sell-stock-with-cooldown",
            "minimum-height-trees",
            "sparse-matrix-multiplication",
            "burst-balloons",
            "super-ugly-number",
            "binary-tree-vertical-order-traversal",
            "count-of-smaller-numbers-after-self",
            "remove-duplicate-letters",
            "shortest-distance-from-all-buildings",
            "maximum-product-of-word-lengths",
            "bulb-switcher",
            "generalized-abbreviation",
            "create-maximum-number",
            "coin-change",
            "number-of-connected-components-in-an-undirected-graph",
            "wiggle-sort-ii",
            "maximum-size-subarray-sum-equals-k",
            "power-of-three",
            "count-of-range-sum",
            "odd-even-linked-list",
            "longest-increasing-path-in-a-matrix",
            "patching-array",
            "verify-preorder-serialization-of-a-binary-tree",
            "reconstruct-itinerary",
            "largest-bst-subtree",
            "increasing-triplet-subsequence",
            "self-crossing",
            "palindrome-pairs",
            "house-robber-iii",
            "counting-bits",
            "nested-list-weight-sum",
            "longest-substring-with-at-most-k-distinct-characters",
            "flatten-nested-list-iterator",
            "power-of-four",
            "integer-break",
            "reverse-string",
            "reverse-vowels-of-a-string",
            "moving-average-from-data-stream",
            "top-k-frequent-elements",
            "design-tic-tac-toe",
            "intersection-of-two-arrays",
            "intersection-of-two-arrays-ii",
            "android-unlock-patterns",
            "data-stream-as-disjoint-intervals",
            "design-snake-game",
            "russian-doll-envelopes",
            "design-twitter",
            "line-reflection",
            "count-numbers-with-unique-digits",
            "rearrange-string-k-distance-apart",
            "logger-rate-limiter",
            "sort-transformed-array",
            "bomb-enemy",
            "design-hit-counter",
            "max-sum-of-rectangle-no-larger-than-k",
            "nested-list-weight-sum-ii",
            "water-and-jug-problem",
            "find-leaves-of-binary-tree",
            "valid-perfect-square",
            "largest-divisible-subset",
            "plus-one-linked-list",
            "range-addition",
            "sum-of-two-integers",
            "super-pow",
            "find-k-pairs-with-smallest-sums",
            "guess-number-higher-or-lower",
            "guess-number-higher-or-lower-ii",
            "wiggle-subsequence",
            "combination-sum-iv",
            "kth-smallest-element-in-a-sorted-matrix",
            "design-phone-directory",
            "insert-delete-getrandom-o(1)",
            "insert-delete-getrandom-o(1)---duplicates-allowed",
            "linked-list-random-node",
            "ransom-note",
            "shuffle-an-array",
            "mini-parser",
            "lexicographical-numbers",
            "first-unique-character-in-a-string",
            "longest-absolute-file-path",
            "find-the-difference",
            "elimination-game",
            "perfect-rectangle",
            "is-subsequence",
            "utf-8-validation",
            "decode-string",
            "longest-substring-with-at-least-k-repeating-characters",
            "rotate-function",
            "integer-replacement",
            "random-pick-index",
            "evaluate-division",
            "nth-digit",
            "binary-watch",
            "remove-k-digits",
            "frog-jump",
            "sum-of-left-leaves",
            "convert-a-number-to-hexadecimal",
            "queue-reconstruction-by-height",
            "trapping-rain-water-ii",
            "valid-word-abbreviation",
            "longest-palindrome",
            "split-array-largest-sum",
            "minimum-unique-word-abbreviation",
            "fizz-buzz",
            "arithmetic-slices",
            "third-maximum-number",
            "add-strings",
            "partition-equal-subset-sum",
            "pacific-atlantic-water-flow",
            "sentence-screen-fitting",
            "battleships-in-a-board",
            "strong-password-checker",
            "maximum-xor-of-two-numbers-in-an-array",
            "valid-word-square",
            "reconstruct-original-digits-from-english",
            "longest-repeating-character-replacement",
            "word-squares",
            "convert-binary-search-tree-to-sorted-doubly-linked-list",
            "construct-quad-tree",
            "serialize-and-deserialize-n-ary-tree",
            "n-ary-tree-level-order-traversal",
            "flatten-a-multilevel-doubly-linked-list",
            "encode-n-ary-tree-to-binary-tree",
            "all-o`one-data-structure",
            "minimum-genetic-mutation",
            "number-of-segments-in-a-string",
            "non-overlapping-intervals",
            "find-right-interval",
            "path-sum-iii",
            "find-all-anagrams-in-a-string",
            "ternary-expression-parser",
            "k-th-smallest-in-lexicographical-order",
            "arranging-coins",
            "find-all-duplicates-in-an-array",
            "string-compression",
            "sequence-reconstruction",
            "add-two-numbers-ii",
            "arithmetic-slices-ii---subsequence",
            "number-of-boomerangs",
            "find-all-numbers-disappeared-in-an-array",
            "serialize-and-deserialize-bst",
            "delete-node-in-a-bst",
            "sort-characters-by-frequency",
            "minimum-number-of-arrows-to-burst-balloons",
            "minimum-moves-to-equal-array-elements",
            "4sum-ii",
            "assign-cookies",
            "132-pattern",
            "circular-array-loop",
            "poor-pigs",
            "repeated-substring-pattern",
            "lfu-cache",
            "hamming-distance",
            "minimum-moves-to-equal-array-elements-ii",
            "island-perimeter",
            "can-i-win",
            "optimal-account-balancing",
            "count-the-repetitions",
            "unique-substrings-in-wraparound-string",
            "validate-ip-address",
            "convex-polygon",
            "implement-rand10()-using-rand7()",
            "encode-string-with-shortest-length",
            "concatenated-words",
            "matchsticks-to-square",
            "ones-and-zeroes",
            "heaters",
            "number-complement",
            "total-hamming-distance",
            "generate-random-point-in-a-circle",
            "largest-palindrome-product",
            "sliding-window-median",
            "magical-string",
            "license-key-formatting",
            "smallest-good-base",
            "find-permutation",
            "max-consecutive-ones",
            "predict-the-winner",
            "max-consecutive-ones-ii",
            "zuma-game",
            "robot-room-cleaner",
            "the-maze",
            "non-decreasing-subsequences",
            "construct-the-rectangle",
            "reverse-pairs",
            "target-sum",
            "teemo-attacking",
            "next-greater-element-i",
            "random-point-in-non-overlapping-rectangles",
            "diagonal-traverse",
            "the-maze-iii",
            "keyboard-row",
            "find-mode-in-binary-search-tree",
            "ipo",
            "next-greater-element-ii",
            "base-7",
            "the-maze-ii",
            "relative-ranks",
            "perfect-number",
            "most-frequent-subtree-sum",
            "fibonacci-number",
            "inorder-successor-in-bst-ii",
            "game-play-analysis-i",
            "game-play-analysis-ii",
            "find-bottom-left-tree-value",
            "freedom-trail",
            "find-largest-value-in-each-tree-row",
            "longest-palindromic-subsequence",
            "super-washing-machines",
            "coin-change-ii",
            "random-flip-matrix",
            "detect-capital",
            "longest-uncommon-subsequence-i",
            "longest-uncommon-subsequence-ii",
            "continuous-subarray-sum",
            "longest-word-in-dictionary-through-deleting",
            "contiguous-array",
            "beautiful-arrangement",
            "word-abbreviation",
            "random-pick-with-weight",
            "minesweeper",
            "minimum-absolute-difference-in-bst",
            "lonely-pixel-i",
            "k-diff-pairs-in-an-array",
            "lonely-pixel-ii",
            "game-play-analysis-iii",
            "encode-and-decode-tinyurl",
            "construct-binary-tree-from-string",
            "complex-number-multiplication",
            "convert-bst-to-greater-tree",
            "minimum-time-difference",
            "single-element-in-a-sorted-array",
            "reverse-string-ii",
            "01-matrix",
            "diameter-of-binary-tree",
            "output-contest-matches",
            "boundary-of-binary-tree",
            "remove-boxes",
            "number-of-provinces",
            "split-array-with-equal-sum",
            "binary-tree-longest-consecutive-sequence-ii",
            "game-play-analysis-iv",
            "student-attendance-record-i",
            "student-attendance-record-ii",
            "optimal-division",
            "brick-wall",
            "split-concatenated-strings",
            "next-greater-element-iii",
            "reverse-words-in-a-string-iii",
            "logical-or-of-two-binary-grids-represented-as-quad-trees",
            "maximum-depth-of-n-ary-tree",
            "subarray-sum-equals-k",
            "array-partition",
            "longest-line-of-consecutive-one-in-matrix",
            "binary-tree-tilt",
            "find-the-closest-palindrome",
            "array-nesting",
            "reshape-the-matrix",
            "permutation-in-string",
            "maximum-vacation-days",
            "median-employee-salary",
            "managers-with-at-least-5-direct-reports",
            "find-median-given-frequency-of-numbers",
            "subtree-of-another-tree",
            "squirrel-simulation",
            "winning-candidate",
            "distribute-candies",
            "out-of-boundary-paths",
            "employee-bonus",
            "get-highest-answer-rate-question",
            "find-cumulative-salary-of-an-employee",
            "count-student-number-in-departments",
            "shortest-unsorted-continuous-subarray",
            "kill-process",
            "delete-operation-for-two-strings",
            "find-customer-referee",
            "investments-in-2016",
            "customer-placing-the-largest-number-of-orders",
            "erect-the-fence",
            "design-in-memory-file-system",
            "n-ary-tree-preorder-traversal",
            "n-ary-tree-postorder-traversal",
            "tag-validator",
            "fraction-addition-and-subtraction",
            "valid-square",
            "longest-harmonious-subsequence",
            "big-countries",
            "classes-more-than-5-students",
            "friend-requests-i:-overall-acceptance-rate",
            "range-addition-ii",
            "minimum-index-sum-of-two-lists",
            "non-negative-integers-without-consecutive-ones",
            "human-traffic-of-stadium",
            "friend-requests-ii:-who-has-the-most-friends",
            "consecutive-available-seats",
            "design-compressed-string-iterator",
            "can-place-flowers",
            "construct-string-from-binary-tree",
            "sales-person",
            "tree-node",
            "find-duplicate-file-in-system",
            "triangle-judgement",
            "valid-triangle-number",
            "shortest-distance-in-a-plane",
            "shortest-distance-in-a-line",
            "second-degree-follower",
            "average-salary:-departments-vs-company",
            "add-bold-tag-in-string",
            "merge-two-binary-trees",
            "students-report-by-geography",
            "biggest-single-number",
            "not-boring-movies",
            "task-scheduler",
            "design-circular-queue",
            "add-one-row-to-tree",
            "maximum-distance-in-arrays",
            "minimum-factorization",
            "exchange-seats",
            "swap-salary",
            "maximum-product-of-three-numbers",
            "k-inverse-pairs-array",
            "course-schedule-iii",
            "design-excel-sum-formula",
            "smallest-range-covering-elements-from-k-lists",
            "sum-of-square-numbers",
            "find-the-derangement-of-an-array",
            "design-log-storage-system",
            "exclusive-time-of-functions",
            "average-of-levels-in-binary-tree",
            "shopping-offers",
            "decode-ways-ii",
            "solve-the-equation",
            "design-circular-deque",
            "design-search-autocomplete-system",
            "maximum-average-subarray-i",
            "maximum-average-subarray-ii",
            "set-mismatch",
            "maximum-length-of-pair-chain",
            "palindromic-substrings",
            "replace-words",
            "dota2-senate",
            "2-keys-keyboard",
            "4-keys-keyboard",
            "find-duplicate-subtrees",
            "two-sum-iv---input-is-a-bst",
            "maximum-binary-tree",
            "print-binary-tree",
            "coin-path",
            "robot-return-to-origin",
            "find-k-closest-elements",
            "split-array-into-consecutive-subsequences",
            "remove-9",
            "image-smoother",
            "maximum-width-of-binary-tree",
            "equal-tree-partition",
            "strange-printer",
            "non-decreasing-array",
            "path-sum-iv",
            "beautiful-arrangement-ii",
            "kth-smallest-number-in-multiplication-table",
            "trim-a-binary-search-tree",
            "maximum-swap",
            "second-minimum-node-in-a-binary-tree",
            "bulb-switcher-ii",
            "number-of-longest-increasing-subsequence",
            "longest-continuous-increasing-subsequence",
            "cut-off-trees-for-golf-event",
            "implement-magic-dictionary",
            "map-sum-pairs",
            "valid-parenthesis-string",
            "24-game",
            "valid-palindrome-ii",
            "next-closest-time",
            "baseball-game",
            "k-empty-slots",
            "redundant-connection",
            "redundant-connection-ii",
            "repeated-string-match",
            "longest-univalue-path",
            "knight-probability-in-chessboard",
            "maximum-sum-of-3-non-overlapping-subarrays",
            "employee-importance",
            "stickers-to-spell-word",
            "top-k-frequent-words",
            "binary-number-with-alternating-bits",
            "number-of-distinct-islands",
            "max-area-of-island",
            "count-binary-substrings",
            "degree-of-an-array",
            "partition-to-k-equal-sum-subsets",
            "falling-squares",
            "search-in-a-binary-search-tree",
            "insert-into-a-binary-search-tree",
            "search-in-a-sorted-array-of-unknown-size",
            "kth-largest-element-in-a-stream",
            "binary-search",
            "design-hashset",
            "design-hashmap",
            "design-linked-list",
            "insert-into-a-sorted-circular-linked-list",
            "to-lower-case",
            "random-pick-with-blacklist",
            "number-of-distinct-islands-ii",
            "minimum-ascii-delete-sum-for-two-strings",
            "subarray-product-less-than-k",
            "best-time-to-buy-and-sell-stock-with-transaction-fee",
            "range-module",
            "max-stack",
            "1-bit-and-2-bit-characters",
            "maximum-length-of-repeated-subarray",
            "find-k-th-smallest-pair-distance",
            "longest-word-in-dictionary",
            "accounts-merge",
            "remove-comments",
            "candy-crush",
            "find-pivot-index",
            "split-linked-list-in-parts",
            "number-of-atoms",
            "minimum-window-subsequence",
            "self-dividing-numbers",
            "my-calendar-i",
            "count-different-palindromic-subsequences",
            "my-calendar-ii",
            "my-calendar-iii",
            "flood-fill",
            "sentence-similarity",
            "asteroid-collision",
            "parse-lisp-expression",
            "sentence-similarity-ii",
            "monotone-increasing-digits",
            "daily-temperatures",
            "delete-and-earn",
            "cherry-pickup",
            "closest-leaf-in-a-binary-tree",
            "network-delay-time",
            "find-smallest-letter-greater-than-target",
            "prefix-and-suffix-search",
            "min-cost-climbing-stairs",
            "largest-number-at-least-twice-of-others",
            "shortest-completing-word",
            "contain-virus",
            "number-of-corner-rectangles",
            "ip-to-cidr",
            "open-the-lock",
            "cracking-the-safe",
            "reach-a-number",
            "pour-water",
            "pyramid-transition-matrix",
            "set-intersection-size-at-least-two",
            "bold-words-in-string",
            "employee-free-time",
            "find-anagram-mappings",
            "special-binary-string",
            "prime-number-of-set-bits-in-binary-representation",
            "partition-labels",
            "largest-plus-sign",
            "couples-holding-hands",
            "toeplitz-matrix",
            "reorganize-string",
            "max-chunks-to-make-sorted-ii",
            "max-chunks-to-make-sorted",
            "basic-calculator-iv",
            "jewels-and-stones",
            "basic-calculator-iii",
            "sliding-puzzle",
            "minimize-max-distance-to-gas-station",
            "global-and-local-inversions",
            "split-bst",
            "swap-adjacent-in-lr-string",
            "swim-in-rising-water",
            "k-th-symbol-in-grammar",
            "reaching-points",
            "rabbits-in-forest",
            "transform-to-chessboard",
            "minimum-distance-between-bst-nodes",
            "letter-case-permutation",
            "is-graph-bipartite?",
            "k-th-smallest-prime-fraction",
            "cheapest-flights-within-k-stops",
            "rotated-digits",
            "escape-the-ghosts",
            "domino-and-tromino-tiling",
            "custom-sort-string",
            "number-of-matching-subsequences",
            "preimage-size-of-factorial-zeroes-function",
            "valid-tic-tac-toe-state",
            "number-of-subarrays-with-bounded-maximum",
            "rotate-string",
            "all-paths-from-source-to-target",
            "smallest-rotation-with-highest-score",
            "champagne-tower",
            "similar-rgb-color",
            "minimum-swaps-to-make-sequences-increasing",
            "find-eventual-safe-states",
            "bricks-falling-when-hit",
            "unique-morse-code-words",
            "split-array-with-same-average",
            "number-of-lines-to-write-string",
            "max-increase-to-keep-city-skyline",
            "soup-servings",
            "expressive-words",
            "chalkboard-xor-game",
            "subdomain-visit-count",
            "largest-triangle-area",
            "largest-sum-of-averages",
            "binary-tree-pruning",
            "bus-routes",
            "ambiguous-coordinates",
            "linked-list-components",
            "race-car",
            "most-common-word",
            "short-encoding-of-words",
            "shortest-distance-to-a-character",
            "card-flipping-game",
            "binary-trees-with-factors",
            "goat-latin",
            "friends-of-appropriate-ages",
            "most-profit-assigning-work",
            "making-a-large-island",
            "count-unique-characters-of-all-substrings-of-a-given-string",
            "consecutive-numbers-sum",
            "positions-of-large-groups",
            "masking-personal-information",
            "flipping-an-image",
            "find-and-replace-in-string",
            "sum-of-distances-in-tree",
            "image-overlap",
            "rectangle-overlap",
            "new-21-game",
            "push-dominoes",
            "similar-string-groups",
            "magic-squares-in-grid",
            "keys-and-rooms",
            "split-array-into-fibonacci-sequence",
            "guess-the-word",
            "backspace-string-compare",
            "longest-mountain-in-array",
            "hand-of-straights",
            "shortest-path-visiting-all-nodes",
            "shifting-letters",
            "maximize-distance-to-closest-person",
            "rectangle-area-ii",
            "loud-and-rich",
            "peak-index-in-a-mountain-array",
            "car-fleet",
            "k-similar-strings",
            "exam-room",
            "score-of-parentheses",
            "minimum-cost-to-hire-k-workers",
            "mirror-reflection",
            "buddy-strings",
            "lemonade-change",
            "score-after-flipping-matrix",
            "shortest-subarray-with-sum-at-least-k",
            "all-nodes-distance-k-in-binary-tree",
            "shortest-path-to-get-all-keys",
            "smallest-subtree-with-all-the-deepest-nodes",
            "prime-palindrome",
            "transpose-matrix",
            "binary-gap",
            "reordered-power-of-2",
            "advantage-shuffle",
            "minimum-number-of-refueling-stops",
            "leaf-similar-trees",
            "length-of-longest-fibonacci-subsequence",
            "walking-robot-simulation",
            "koko-eating-bananas",
            "middle-of-the-linked-list",
            "stone-game",
            "nth-magical-number",
            "profitable-schemes",
            "decoded-string-at-index",
            "boats-to-save-people",
            "reachable-nodes-in-subdivided-graph",
            "projection-area-of-3d-shapes",
            "uncommon-words-from-two-sentences",
            "spiral-matrix-iii",
            "possible-bipartition",
            "super-egg-drop",
            "fair-candy-swap",
            "construct-binary-tree-from-preorder-and-postorder-traversal",
            "find-and-replace-pattern",
            "sum-of-subsequence-widths",
            "surface-area-of-3d-shapes",
            "groups-of-special-equivalent-strings",
            "all-possible-full-binary-trees",
            "maximum-frequency-stack",
            "monotonic-array",
            "increasing-order-search-tree",
            "bitwise-ors-of-subarrays",
            "orderly-queue",
            "rle-iterator",
            "online-stock-span",
            "numbers-at-most-n-given-digit-set",
            "valid-permutations-for-di-sequence",
            "fruit-into-baskets",
            "sort-array-by-parity",
            "super-palindromes",
            "sum-of-subarray-minimums",
            "smallest-range-i",
            "snakes-and-ladders",
            "smallest-range-ii",
            "online-election",
            "sort-an-array",
            "cat-and-mouse",
            "x-of-a-kind-in-a-deck-of-cards",
            "partition-array-into-disjoint-intervals",
            "word-subsets",
            "reverse-only-letters",
            "maximum-sum-circular-subarray",
            "complete-binary-tree-inserter",
            "number-of-music-playlists",
            "minimum-add-to-make-parentheses-valid",
            "sort-array-by-parity-ii",
            "3sum-with-multiplicity",
            "minimize-malware-spread",
            "long-pressed-name",
            "flip-string-to-monotone-increasing",
            "three-equal-parts",
            "minimize-malware-spread-ii",
            "unique-email-addresses",
            "binary-subarrays-with-sum",
            "minimum-falling-path-sum",
            "beautiful-array",
            "number-of-recent-calls",
            "shortest-bridge",
            "knight-dialer",
            "stamping-the-sequence",
            "reorder-data-in-log-files",
            "range-sum-of-bst",
            "minimum-area-rectangle",
            "distinct-subsequences-ii",
            "valid-mountain-array",
            "di-string-match",
            "find-the-shortest-superstring",
            "delete-columns-to-make-sorted",
            "minimum-increment-to-make-array-unique",
            "validate-stack-sequences",
            "most-stones-removed-with-same-row-or-column",
            "bag-of-tokens",
            "largest-time-for-given-digits",
            "reveal-cards-in-increasing-order",
            "flip-equivalent-binary-trees",
            "largest-component-size-by-common-factor",
            "verifying-an-alien-dictionary",
            "array-of-doubled-pairs",
            "delete-columns-to-make-sorted-ii",
            "tallest-billboard",
            "prison-cells-after-n-days",
            "check-completeness-of-a-binary-tree",
            "regions-cut-by-slashes",
            "delete-columns-to-make-sorted-iii",
            "n-repeated-element-in-size-2n-array",
            "maximum-width-ramp",
            "minimum-area-rectangle-ii",
            "least-operators-to-express-number",
            "univalued-binary-tree",
            "vowel-spellchecker",
            "numbers-with-same-consecutive-differences",
            "binary-tree-cameras",
            "pancake-sorting",
            "powerful-integers",
            "flip-binary-tree-to-match-preorder-traversal",
            "equal-rational-numbers",
            "k-closest-points-to-origin",
            "subarray-sums-divisible-by-k",
            "odd-even-jump",
            "largest-perimeter-triangle",
            "squares-of-a-sorted-array",
            "longest-turbulent-subarray",
            "distribute-coins-in-binary-tree",
            "unique-paths-iii",
            "time-based-key-value-store",
            "triples-with-bitwise-and-equal-to-zero",
            "minimum-cost-for-tickets",
            "string-without-aaa-or-bbb",
            "sum-of-even-numbers-after-queries",
            "interval-list-intersections",
            "vertical-order-traversal-of-a-binary-tree",
            "smallest-string-starting-from-leaf",
            "add-to-array-form-of-integer",
            "satisfiability-of-equality-equations",
            "broken-calculator",
            "subarrays-with-k-different-integers",
            "cousins-in-binary-tree",
            "rotting-oranges",
            "minimum-number-of-k-consecutive-bit-flips",
            "number-of-squareful-arrays",
            "find-the-town-judge",
            "maximum-binary-tree-ii",
            "available-captures-for-rook",
            "minimum-cost-to-merge-stones"
        ];
        const randomIndex = Math.floor(Math.random() * questions.length);
        return questions[randomIndex];
    } catch (error) {
        console.error('Error selecting random question:', error);
        return "two-sum";
    }
}

// ----- EVENT LISTENER FUNCTIONS -----

browser.webNavigation.onBeforeNavigate.addListener(
    function(details) {
        if (LLM_REGEX.test(details.url)) {
            browser.storage.local.get(['lastSolvedTime']).then((result) => {
                const now = Date.now();
                if (!result.lastSolvedTime || now - result.lastSolvedTime > RESETTIME) {
                    browser.storage.local.set({originalUrl: details.url}).then(() => {
                        browser.tabs.update(details.tabId, {url: browser.runtime.getURL("popup.html")});
                    });
                }
            });
        }
    },
    {
        url: [{urlMatches: LLM_REGEX.source}]
    }
);

browser.runtime.onMessage.addListener((request, sender, sendResponse) => {
    if (request.action === "getRandomQuestion") {
        (async () => {
            try {
                const titleSlug = await getRandomLeetCodeProblemTitleSlug();
                const questionData = await fetchLeetCodeQuestion(titleSlug);
                console.log("LeetCode Question Data:", questionData);
                sendResponse({ 
                    question: questionData.content, 
                    id: questionData.questionId, 
                    title: questionData.title,
                    slug: questionData.titleSlug
                });
            } catch (error) {
                console.error("Error fetching question:", error);
                sendResponse({ question: "Failed to fetch question.", id: null, title: null, slug: null });
            }
        })();
        return true; 
    }
    else if (request.action === "redirectToOriginal") {
        return browser.storage.local.get(['originalUrl']).then((result) => {
            if (result.originalUrl) {
                return browser.tabs.create({ url: result.originalUrl });
            }
        });
    }
});

browser.runtime.onMessage.addListener((message, sender, sendResponse) => {
    console.log("Received message in background script:", message);
    if (message.action === "submissionSuccess" || (message.action === "submissionResult" && message.success)) {
        console.log("Successful submission detected");
        browser.runtime.sendMessage({ action: "updatePopup", content: "Congratulations! You've solved the problem.\n\nYou can now access any AI Chatbot for the next 15 minutes." });
        browser.tabs.remove(sender.tab.id);
        browser.storage.local.set({lastSolvedTime: Date.now()}).then(() => {
            console.log("Last solved time updated");
        });
    } else if (message.action === "submissionResult" && !message.success) {
        console.log("Submission failed");
    }
});